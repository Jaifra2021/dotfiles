# Don't do anything if this is not an interactive session
case $- in
    *i*) ;;
      *) return;;
esac

# Enable tab-completion
if [[ -f /etc/bash_completion ]]; then
    source /etc/bash_completion
elif [[ -f /usr/local/etc/bash_completion ]]; then
    source /usr/local/etc/bash_completion
else
    fname=$(brew --prefix 2>/dev/null)/etc/bash_completion
    [[ -f "$fname" ]] && source "$fname"
fi

# Tab-completion for SSH
_complete_ssh_hosts ()
{
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
        egrep -v '^(\||\[|#)' | \
        cut -f 1 -d ' ' | \
        cut -f 1 -d ',' | \
        grep -v ':' | \
        uniq ;
    cat ~/.ssh/config | \
        grep "^Host " | \
        awk '{print $2}'`
    COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
    return 0
}
complete -F _complete_ssh_hosts ssh

# Append to history file instead of overwriting
shopt -s histappend

# Don't add duplicate lines, or lines starting with a space to the history file
HISTCONTROL=ignoreboth

# Set number of commands stored in memory and in the history file
HISTSIZE=50000
HISTFILESIZE=50000
HISTFILE=$HOME/.history_bash

# Update values of LINES and COLUMNS after window resize
shopt -s checkwinsize

# Use '**' in pathname expansions like in ZSH
shopt -s globstar

# Function to get name of current git branch
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Set prompt
# PS1='\[\e[1;33m\]\W \$\[\e[0m\] '
PS1="\[\e[1;34m\][\T] \[\e[1;33m\]\[\e[1;33m\]\W\[\e[1;32m\]\$(parse_git_branch) \$\[\e[0m\] "

# Add function to switch to a verbose prompt
prompt-verbose() {
    PS1="\n\[\e[1;32m\]\u@\h:\[\e[0m\]\w\[\e[1;32m\]\$(parse_git_branch) \[\e[1;34m\][\T] \n\[\e[1;33m\]\$ \[\e[0m\]"
}

# Add function to switch to a terse prompt (default)
prompt-terse() {
    PS1="\[\e[1;34m\][\T] \[\e[1;33m\]\[\e[1;33m\]\W\[\e[1;32m\]\$(parse_git_branch) \$\[\e[0m\] "
}

# Source beu wrappers
[[ -f $HOME/.beu/wrappers.sh ]] && source $HOME/.beu/wrappers.sh

# Setup nvm (node version manager)
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Source the `.shell/common` file
[[ -f $HOME/.shell/common ]] && source $HOME/.shell/common

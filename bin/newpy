#!/usr/bin/env bash

name=$1
[[ -z "$name" ]] && exit 1
shift

req_file="requirements.txt"
start_interactive="env/bin/ipython"

while [[ -n "$1" ]]; do
    case "$1" in
        --tasty)
            req_file="requirements-tastypie.txt"
            start_interactive="env/bin/python manage.py shell"
            do_tasty="yea"
            ;;
        *)
            echo "Unknown parameter: $1" >&2
            exit 1
    esac

    if ! shift; then
        echo "Missing parameter argument" >&2
        exit 1
    fi
done

component_dir_path="$HOME/py/components/$name"

if [[ -d $component_dir_path ]]; then
    echo "$component_dir_path already exists" >&2
    exit 1
fi

mkdir -pv $component_dir_path
cd $component_dir_path || exit 1
cp -av $HOME/py/.skel/setup.bash .
cp -av $HOME/py/.skel/$req_file requirements.txt

# Actually create the environment
./setup.bash || exit 1

# Perform any post-install steps
if [[ -n "$do_tasty" ]]; then
    echo -e "\nenv/bin/django-admin.py startproject mysite ." >&2
    env/bin/django-admin.py startproject mysite .
fi

if [[ -z "$TMUX" ]]; then
    # Start interactive session
    eval '$start_interactive'
else
    # Create a new window in existing tmux session
    tmux new-window -n "py-$name"

    # Split the tmux window and start interactive session
    tmux split-window -h "eval '$start_interactive'"
fi
